package ch.specchio.gui;import ch.specchio.client.SPECCHIOClient;import ch.specchio.metadata.MDE_Spectrum_Controller;import javax.swing.*;import javax.swing.event.ChangeEvent;import javax.swing.event.ChangeListener;import javax.swing.event.TreeSelectionEvent;import javax.swing.event.TreeSelectionListener;import java.awt.*;import java.awt.dnd.*;import java.awt.event.ActionEvent;import java.awt.event.ActionListener;import java.awt.event.KeyEvent;public class InfoVisMainFrame extends JFrame {   private DataSelectionPanel3 dataSelectionPanel;    public InfoVisMainFrame(){        super("InfoVis Toolbox");        SPECCHIOClient specchioClient = SPECCHIOApplication.getInstance().getClient();        setLayout(new BorderLayout());        dataSelectionPanel = new DataSelectionPanel3(specchioClient,this);        setJMenuBar(createMenuBar());        add(dataSelectionPanel, BorderLayout.CENTER);        setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);        setMinimumSize(new Dimension(500, 500));        setSize(1000,1000);        setVisible(true);    }    private JMenuBar createMenuBar(){        JMenuBar menuBar = new JMenuBar();        JMenu fileMenu = new JMenu("File");        JMenuItem exportDataItem = new JMenuItem("Export Data...");        JMenuItem importDataItem = new JMenuItem("Import Data...");        JMenuItem exitItem = new JMenuItem("Exit");        fileMenu.add(exportDataItem);        fileMenu.add(importDataItem);        fileMenu.addSeparator();        fileMenu.add(exitItem);        JMenu windowMenu = new JMenu("Window");        JMenu showMenu = new JMenu("Show");        JCheckBoxMenuItem showFormItem = new JCheckBoxMenuItem("Spectral Data Browser");        showFormItem.setSelected(true);        windowMenu.add(showMenu);        showMenu.add(showFormItem);        menuBar.add(fileMenu);        menuBar.add(windowMenu);        fileMenu.setMnemonic(KeyEvent.VK_F);        exitItem.setMnemonic(KeyEvent.VK_X);        exitItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_X, ActionEvent.CTRL_MASK));        exitItem.addActionListener(new ActionListener() {            @Override            public void actionPerformed(ActionEvent e) {                int action = JOptionPane.showConfirmDialog(InfoVisMainFrame.this, "Quit Toolbox?", "Confirm Exit", JOptionPane.OK_CANCEL_OPTION);                if(action == JOptionPane.OK_OPTION) {                    setVisible(false);                }            }        });        JMenu selectioMenu = new JMenu("Selection");        menuBar.add(selectioMenu);        JMenu toolsMenu = new JMenu("Tools");        menuBar.add(toolsMenu);        return menuBar;    }}